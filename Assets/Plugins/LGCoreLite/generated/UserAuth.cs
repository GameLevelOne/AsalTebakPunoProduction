//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace LGCoreLite {

/// <summary>
/// <c>UserAuth</c> is model class that defines authentication information of login user.
/// </summary>
public class UserAuth : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal UserAuth(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UserAuth obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~UserAuth() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LGCoreLitePINVOKE.delete_UserAuth(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  /// <summary>
  /// Initializes a new instance of the <see cref="LGCoreLite.UserAuth"/> class.
  /// </summary>
  public UserAuth() : this(LGCoreLitePINVOKE.new_UserAuth__SWIG_0(), true) {
  }

  public UserAuth(UserAuth rhs) : this(LGCoreLitePINVOKE.new_UserAuth__SWIG_1(UserAuth.getCPtr(rhs)), true) {
    if (LGCoreLitePINVOKE.SWIGPendingException.Pending) throw LGCoreLitePINVOKE.SWIGPendingException.Retrieve();
  }

  /// <summary>
  /// Initializes a new instance of the <see cref="LGCoreLite.UserAuth"/> class.
  /// </summary>
  /// <param name="accessToken">Access token.</param>
  /// <param name="profile">User profile of login user.</param>
  public UserAuth(string accessToken, UserProfile profile) : this(LGCoreLitePINVOKE.new_UserAuth__SWIG_2(accessToken, UserProfile.getCPtr(profile)), true) {
    if (LGCoreLitePINVOKE.SWIGPendingException.Pending) throw LGCoreLitePINVOKE.SWIGPendingException.Retrieve();
  }

  /// <summary>
  /// Gets the access token.
  /// </summary>
  /// <returns>The access token.</returns>
  public string getAccessToken() {
    string ret = System.Runtime.InteropServices.Marshal.PtrToStringAnsi(LGCoreLitePINVOKE.UserAuth_getAccessToken(swigCPtr));
    return ret;
}

  /// <summary>
  /// Sets the access token.
  /// </summary>
  /// <param name="token">The access token to set.</param>
  public void setAccessToken(string token) {
    LGCoreLitePINVOKE.UserAuth_setAccessToken(swigCPtr, token);
    if (LGCoreLitePINVOKE.SWIGPendingException.Pending) throw LGCoreLitePINVOKE.SWIGPendingException.Retrieve();
  }

  /// <summary>
  /// Gets the user profile by value copy.
  /// </summary>
  /// <returns>The user profile by value copy.</returns>
  public UserProfile getUserProfile() {
    UserProfile ret = new UserProfile(LGCoreLitePINVOKE.UserAuth_getUserProfile(swigCPtr), false);
    return ret;
  }

  /// <summary>
  /// Gets the user profile by reference.
  /// </summary>
  /// <returns>The user profile by reference.</returns>
  public UserProfile userProfile() {
    UserProfile ret = new UserProfile(LGCoreLitePINVOKE.UserAuth_userProfile(swigCPtr), false);
    return ret;
  }

  /// <summary>
  /// Sets the user profile.
  /// </summary>
  /// <param name="profile">The user profile to set.</param>
  public void setUserProfile(UserProfile profile) {
    LGCoreLitePINVOKE.UserAuth_setUserProfile(swigCPtr, UserProfile.getCPtr(profile));
    if (LGCoreLitePINVOKE.SWIGPendingException.Pending) throw LGCoreLitePINVOKE.SWIGPendingException.Retrieve();
  }

}

}
